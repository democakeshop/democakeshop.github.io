{"version":3,"sources":["webpack:///./src/components/ProductGrid/styles.js","webpack:///./src/components/ProductGrid/index.js","webpack:///./src/pages/products.js"],"names":["Grid","styled","div","breakpoints","s","Product","Title","span","PriceTag","ProductGrid","checkout","useContext","StoreContext","store","allShopifyProduct","useStaticQuery","edges","map","price","node","id","handle","title","firstImage","images","firstVariant","variants","key","to","localFile","fluid","childImageSharp","alt","Intl","NumberFormat","undefined","currency","currencyCode","minimumFractionDigits","style","format","parseFloat","CatalogPage","keywords"],"mappings":"s1BAKO,IAAMA,EAAOC,IAAOC,IAAV,IAKMC,IAAYC,GAKtBC,EAAUJ,IAAOC,IAAV,KAMPI,EAAQL,IAAOM,KAAV,KAMLC,EAAWP,IAAOM,KAAV,KCkDNE,EAjEK,WAAO,IACTC,EAAcC,qBAAWC,KAAjCC,MAAQH,SACRI,EAAsBC,yBAAe,cAArCD,kBA0CR,OACE,kBAACd,EAAD,KACGc,EAAkBE,MACfF,EAAkBE,MAAMC,KAAI,gBATnBC,EASmB,IAAGC,KAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,MAAgBC,EAAvC,EAA8BC,OAA9B,GAA+DC,EAA/D,EAAoDC,SAApD,UAC5B,kBAACrB,EAAD,CAASsB,IAAKP,GACZ,kBAAC,OAAD,CAAMQ,GAAE,YAAcP,EAAd,KACLE,GAAcA,EAAWM,WACvB,kBAAC,IAAD,CACCC,MAAOP,EAAWM,UAAUE,gBAAgBD,MAC5CE,IAAKX,KAGX,kBAACf,EAAD,KAAQgB,GACR,kBAACd,EAAD,MAnBOU,EAmBaO,EAAaP,MAnBjBe,KAAKC,kBAAaC,EAAW,CACrDC,SAAU1B,EAAS2B,aAAe3B,EAAS2B,aAAe,MAC1DC,sBAAuB,EACvBC,MAAO,aACNC,OAAOC,WAAWvB,GAAgB,UAkB7B,mDC5DKwB,UARK,kBAClB,oCACE,kBAAC,IAAD,CAAKpB,MAAM,WAAWqB,SAAU,CAAC,SAAD,yBAChC,2DACA,kBAAC,EAAD","file":"component---src-pages-products-js-55ec3baa3cad468467d5.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nimport { breakpoints } from '../../utils/styles'\r\n\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 2.5rem;\r\n\r\n  @media (max-width: ${breakpoints.s}px){\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`\r\n\r\nexport const Product = styled.div`\r\n  display: flex;\r\n  min-height: 100%;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  font-weight: 300;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`\r\n\r\nexport const PriceTag = styled.span`\r\n  font-weight: 300;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  margin-top: 15px;\r\n`","import React, { useContext } from 'react'\r\nimport { useStaticQuery, graphql, Link } from 'gatsby'\r\n\r\nimport StoreContext from '~/context/StoreContext'\r\nimport {\r\n  Grid,\r\n  Product,\r\n  Title,\r\n  PriceTag\r\n} from './styles'\r\nimport { Img } from '~/utils/styles'\r\n\r\nconst ProductGrid = () => {\r\n  const { store: {checkout} } = useContext(StoreContext)\r\n  const { allShopifyProduct } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allShopifyProduct(\r\n          sort: {\r\n            fields: [createdAt]\r\n            order: DESC\r\n          }\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              title\r\n              handle\r\n              createdAt\r\n              images {\r\n                id\r\n                originalSrc\r\n                localFile {\r\n                  childImageSharp {\r\n                    fluid(maxWidth: 910) {\r\n                      ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              variants {\r\n                price\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const getPrice = price => Intl.NumberFormat(undefined, {\r\n    currency: checkout.currencyCode ? checkout.currencyCode : 'EUR',\r\n    minimumFractionDigits: 2,\r\n    style: 'currency',\r\n  }).format(parseFloat(price ? price : 0))\r\n\r\n  return (\r\n    <Grid>\r\n      {allShopifyProduct.edges\r\n        ? allShopifyProduct.edges.map(({ node: { id, handle, title, images: [firstImage], variants: [firstVariant] } }) => (\r\n          <Product key={id} >\r\n            <Link to={`/product/${handle}/`}>\r\n              {firstImage && firstImage.localFile &&\r\n                (<Img\r\n                  fluid={firstImage.localFile.childImageSharp.fluid}\r\n                  alt={handle}\r\n                />)}\r\n            </Link>\r\n            <Title>{title}</Title>\r\n            <PriceTag>{getPrice(firstVariant.price)}</PriceTag>\r\n          </Product>\r\n        ))\r\n        : <p>No Products found!</p>}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ProductGrid\r\n","import React from 'react'\r\nimport SEO from '~/components/seo'\r\nimport ProductGrid from '~/components/ProductGrid'\r\n\r\nconst CatalogPage = () => (\r\n  <>\r\n    <SEO title=\"Products\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <h1>Products available for sale</h1>\r\n    <ProductGrid />\r\n  </>\r\n)\r\n\r\nexport default CatalogPage"],"sourceRoot":""}