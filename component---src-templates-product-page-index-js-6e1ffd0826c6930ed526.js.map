{"version":3,"sources":["webpack:///./src/components/stockdata.js","webpack:///./src/components/Stocks.js","webpack:///./src/components/ProductForm/index.js","webpack:///./src/templates/ProductPage/styles.js","webpack:///./src/templates/ProductPage/index.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/toNumber.js"],"names":["stockData","Stocks","map","data","key","className","inventory_levels","available","ProductForm","product","options","variants","initialVariant","minVariantPrice","priceRange","useState","variant","setVariant","quantity","setQuantity","useContext","StoreContext","addVariantToCart","store","client","adding","productVariant","helpers","variantForOptions","availableForSale","setAvailable","checkAvailability","useCallback","productId","fetch","then","fetchedProduct","result","filter","id","shopifyId","length","useEffect","checkDisabled","name","value","match","find","selectedOptions","undefined","price","Intl","NumberFormat","currency","currencyCode","minimumFractionDigits","style","format","index","values","Fragment","htmlFor","onClick","event","optionIndex","target","currentOptions","selectedVariant","isEqual","handleOptionChange","disabled","type","min","step","onChange","ProductTitle","styled","h1","ProductDescription","div","query","ProductPage","shopifyProduct","title","description","images","image","fluid","localFile","childImageSharp","alt","dangerouslySetInnerHTML","__html","descriptionHtml","createFind","module","exports","array","predicate","fromIndex","fromRight","toFinite","remainder","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","isArrayLike","keys","findIndexFunc","collection","iterable","Object","iteratee","baseIsEqual","other","toNumber","isObject","isSymbol","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","replace","isBinary","test","slice"],"mappings":"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","file":"component---src-templates-product-page-index-js-6e1ffd0826c6930ed526.js","sourcesContent":["export const stockData = [\r\n{\r\n  \"inventory_levels\": [\r\n    {\r\n      \"inventory_item_id\": 37648175628438,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-02T08:51:14Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37648175628438\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37648175661206,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 0,\r\n      \"updated_at\": \"2020-08-02T08:51:14Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37648175661206\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37651097485462,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 47,\r\n      \"updated_at\": \"2020-08-02T16:32:32Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37651097485462\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37651097518230,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-02T16:16:35Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37651097518230\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37651097550998,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 45,\r\n      \"updated_at\": \"2020-08-02T18:15:26Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37651097550998\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37651097583766,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-02T16:16:36Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37651097583766\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731765551254,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 40,\r\n      \"updated_at\": \"2020-08-05T19:26:57Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731765551254\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731765616790,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:26:57Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731765616790\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731783606422,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 38,\r\n      \"updated_at\": \"2020-08-08T13:36:35Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731783606422\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731783639190,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:28:21Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731783639190\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731805003926,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 47,\r\n      \"updated_at\": \"2020-08-05T19:29:30Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731805003926\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731805036694,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 48,\r\n      \"updated_at\": \"2020-08-08T08:47:35Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731805036694\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731830562966,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:31:20Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731830562966\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731830595734,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:31:20Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731830595734\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731838754966,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:32:03Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731838754966\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731861168278,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 47,\r\n      \"updated_at\": \"2020-08-05T19:32:34Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731861168278\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731896787094,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:33:46Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731896787094\"\r\n    },\r\n    {\r\n      \"inventory_item_id\": 37731896819862,\r\n      \"location_id\": 51856277654,\r\n      \"available\": 50,\r\n      \"updated_at\": \"2020-08-05T19:36:09Z\",\r\n      \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/86035923094?inventory_item_id=37731896819862\"\r\n    }\r\n  ]\r\n}\r\n]","import React from \"react\"\r\nimport { stockData } from './stockdata'\r\n\r\nexport const Stocks = () => {\r\n  return (\r\n    <>\r\n      {stockData.map((data, key) => {\r\n      \treturn (\r\n      \t\t  <span key={data} className=\"stocklevel\">{data.inventory_levels[2].available} available</span>\r\n      \t\t)\r\n      })}\r\n    </>\r\n  );\r\n};","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport find from 'lodash/find'\r\nimport isEqual from 'lodash/isEqual'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport StoreContext from '~/context/StoreContext'\r\nimport { Stocks } from '../Stocks'\r\n\r\nconst ProductForm = ({ product }) => {\r\n  const {\r\n    options,\r\n    variants,\r\n    variants: [initialVariant],\r\n    priceRange: { minVariantPrice },\r\n  } = product\r\n  const [variant, setVariant] = useState({ ...initialVariant })\r\n  const [quantity, setQuantity] = useState(1)\r\n  const {\r\n    addVariantToCart,\r\n    store: { client, adding },\r\n  } = useContext(StoreContext)\r\n\r\n  const productVariant =\r\n    client.product.helpers.variantForOptions(product, variant) || variant\r\n  const [available, setAvailable] = useState(productVariant.availableForSale)\r\n  \r\n  const checkAvailability = useCallback(\r\n    productId => {\r\n      client.product.fetch(productId).then(fetchedProduct => {\r\n        // this checks the currently selected variant for availability\r\n        const result = fetchedProduct.variants.filter(\r\n          variant => variant.id === productVariant.shopifyId\r\n        )\r\n        if (result.length > 0) {\r\n          setAvailable(result[0].id)\r\n        }\r\n      })\r\n    },\r\n    [client.product, productVariant.shopifyId]\r\n  )\r\n\r\n  useEffect(() => {\r\n    checkAvailability(product.shopifyId)\r\n  }, [productVariant, checkAvailability, product.shopifyId])\r\n\r\n  const handleQuantityChange = ({ target }) => {\r\n    setQuantity(target.value)\r\n  }\r\n\r\n  const handleOptionChange = (optionIndex, { target }) => {\r\n    const { value } = target\r\n    const currentOptions = [...variant.selectedOptions]\r\n\r\n    currentOptions[optionIndex] = {\r\n      ...currentOptions[optionIndex],\r\n      value,\r\n    }\r\n\r\n    const selectedVariant = find(variants, ({ selectedOptions }) =>\r\n      isEqual(currentOptions, selectedOptions)\r\n    )\r\n\r\n    setVariant({ ...selectedVariant })\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    addVariantToCart(productVariant.shopifyId, quantity)\r\n  }\r\n\r\n  const checkDisabled = (name, value) => {\r\n    const match = find(variants, {\r\n      selectedOptions: [\r\n        {\r\n          name: name,\r\n          value: value,\r\n        },\r\n      ],\r\n    })\r\n    if (match === undefined) return true\r\n    if (match.availableForSale === true) return false\r\n    return true\r\n  }\r\n\r\n  const price = Intl.NumberFormat(undefined, {\r\n    currency: minVariantPrice.currencyCode,\r\n    minimumFractionDigits: 2,\r\n    style: 'currency',\r\n  }).format(variant.price)\r\n\r\n  return (\r\n    <>\r\n      <h3>{price}</h3>\r\n      <div className=\"options\">\r\n        <span>\r\n        {options.map(({ id, name, values }, index) => (\r\n          <React.Fragment key={id}>\r\n            <label htmlFor={name}>{name} </label>\r\n            <select\r\n              name={name}\r\n              key={id}\r\n              onClick={event => handleOptionChange(index, event)}\r\n            >\r\n              {values.map(value => (\r\n                <option\r\n                  value={value}\r\n                  key={`${name}-${value}`}\r\n                  disabled={checkDisabled(name, value)}\r\n                >\r\n                  {value}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n        </span>\r\n        <span>\r\n        <label htmlFor=\"quantity\">Quantity </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"quantity\"\r\n          name=\"quantity\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n          onChange={handleQuantityChange}\r\n          value={quantity}\r\n        />\r\n        </span>\r\n        <Stocks />\r\n      </div>\r\n      <br />\r\n      <button\r\n        type=\"submit\"\r\n        disabled={!available || adding}\r\n        onClick={handleAddToCart}\r\n      >\r\n        Add to Cart\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nProductForm.propTypes = {\r\n  product: PropTypes.shape({\r\n    descriptionHtml: PropTypes.string,\r\n    handle: PropTypes.string,\r\n    id: PropTypes.string,\r\n    shopifyId: PropTypes.string,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        originalSrc: PropTypes.string,\r\n      })\r\n    ),\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        values: PropTypes.arrayOf(PropTypes.string),\r\n      })\r\n    ),\r\n    productType: PropTypes.string,\r\n    title: PropTypes.string,\r\n    variants: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        availableForSale: PropTypes.bool,\r\n        id: PropTypes.string,\r\n        price: PropTypes.string,\r\n        title: PropTypes.string,\r\n        shopifyId: PropTypes.string,\r\n        selectedOptions: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            name: PropTypes.string,\r\n            value: PropTypes.string,\r\n          })\r\n        ),\r\n      })\r\n    ),\r\n  }),\r\n  addVariantToCart: PropTypes.func,\r\n}\r\n\r\nexport default ProductForm\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ProductTitle = styled.h1`\r\n  font-size: 1.75rem;\r\n  margin-bottom: 15px;\r\n  word-wrap: break-word;\r\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\r\n  font-weight: 400;\r\n  margin: 0 0 0.5rem;\r\n  line-height: 1.4;\r\n`\r\n\r\nexport const ProductDescription = styled.div`\r\n  margin-top: 40px;\r\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\r\n  font-weight: 300;\r\n  margin-bottom: 20px;\r\n`","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport SEO from '~/components/seo'\r\nimport ProductForm from '~/components/ProductForm'\r\nimport {\r\n  Img,\r\n  Container,\r\n  TwoColumnGrid,\r\n  GridLeft,\r\n  GridRight,\r\n} from '~/utils/styles'\r\nimport {\r\n  ProductTitle,\r\n  ProductDescription\r\n} from './styles'\r\n\r\nconst ProductPage = ({ data }) => {\r\n  const product = data.shopifyProduct\r\n  return (\r\n    <>\r\n      <SEO title={product.title} description={product.description} />\r\n      <Container>\r\n        <TwoColumnGrid>\r\n          <GridLeft>\r\n            {product.images.map(image => (\r\n              <Img\r\n                fluid={image.localFile.childImageSharp.fluid}\r\n                key={image.id}\r\n                alt={product.title}\r\n              />\r\n            ))}\r\n          </GridLeft>\r\n          <GridRight>\r\n            <ProductTitle>{product.title}</ProductTitle>\r\n            <ProductDescription\r\n              dangerouslySetInnerHTML={{ __html: product.descriptionHtml }}\r\n            />\r\n            <ProductForm product={product} />\r\n          </GridRight>\r\n        </TwoColumnGrid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($handle: String!) {\r\n    shopifyProduct(handle: { eq: $handle }) {\r\n      id\r\n      title\r\n      handle\r\n      productType\r\n      description\r\n      descriptionHtml\r\n      shopifyId\r\n      options {\r\n        id\r\n        name\r\n        values\r\n      }\r\n      variants {\r\n        id\r\n        title\r\n        price\r\n        availableForSale\r\n        shopifyId\r\n        selectedOptions {\r\n          name\r\n          value\r\n        }\r\n      }\r\n      priceRange {\r\n        minVariantPrice {\r\n          amount\r\n          currencyCode\r\n        }\r\n        maxVariantPrice {\r\n          amount\r\n          currencyCode\r\n        }\r\n      }\r\n      images {\r\n        originalSrc\r\n        id\r\n        localFile {\r\n          childImageSharp {\r\n            fluid(maxWidth: 910) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ProductPage\r\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"sourceRoot":""}